{
	"info": {
		"_postman_id": "32dea00e-f159-47de-9d8e-0d6d18f0eb0f",
		"name": "dmoney-API-Automation-by-Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29168426",
		"_collection_link": "https://universal-flare-684796.postman.co/workspace/Road-to-sdet~577ecce0-8430-47ee-a8be-a8c16ed7a5e4/collection/29168426-32dea00e-f159-47de-9d8e-0d6d18f0eb0f?action=share&source=collection_link&creator=29168426"
	},
	"item": [
		{
			"name": "user login",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json()\r",
									"var token= jsonData.token;\r",
									"\r",
									"pm.collectionVariables.set(\"token\", token)\r",
									"\r",
									"pm.test(\"Check if user can login if provides correct creds \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"successfully\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"salman@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "user inputs wrong email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check if user can't login with invalid creds\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"not found\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"salman@grr\",\r\n    \"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "create user",
			"item": [
				{
					"name": "create agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Test Agent 1\",\r\n    \"email\":\"agent0@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"01600360497\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Agent\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/create",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "agent already exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if agent is created\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"already exists\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Test Agent 1\",\r\n    \"email\":\"agent9@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"01706360497\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Agent\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/create",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "create customers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var prefix= \"01700\"\r",
									"var randomNumber= _.random(100000,999999)\r",
									"var phoneNumber= prefix+ randomNumber ;\r",
									"\r",
									"pm.collectionVariables.set(\"phoneNumber\", phoneNumber);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check if provides required information user created \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Second Customer\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/create",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "create customers with existing creds",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if user is not created with existing creds\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"already exists\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"User exist\",\r\n    \"email\":\"jovica.ognjanovic@example.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"01504789428\",\r\n    \"nid\":\"1234789428\",\r\n    \"role\":\"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/create",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "user list",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/list",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Trnx",
			"item": [
				{
					"name": "Deposit to Agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check if amount is in limit deposit successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Maximum limit exceeded.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var amount= _.random(0010, 9999)\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"01706360497\",\r\n    \"amount\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit to invalid Agent account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if agent account is not exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"not exist\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"0170636097\",\r\n    \"amount\":2000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/deposit",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit to customer from agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if deposit is successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Maximum limit exceeded\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var amount= _.random(0010, 9999)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01706360497\",\r\n    \"to_account\":\"01799999997\",\r\n    \"amount\":100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://dmoney.roadtocareer.net/transaction/deposit",
							"protocol": "http",
							"host": [
								"dmoney",
								"roadtocareer",
								"net"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Money withdraw by customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check if have enough balance withdraw successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"successful\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01799999997\",\r\n    \"to_account\":\"01706360497\",\r\n    \"amount\":20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/withdraw",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Money withdraw  with insufficient balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if not have enough balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Insufficient balance\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01799999997\",\r\n    \"to_account\":\"01706360497\",\r\n    \"amount\":20000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/withdraw",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send money customer to new customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"from_account\":\"01799999997\",\r\n    \"to_account\":\"01700737450\",\r\n    \"amount\":50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/sendmoney",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "insufficient balance_send money",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check if have not enough balance send money insuccessful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Insufficient\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"from_account\":\"01799999997\",\r\n    \"to_account\":\"01700737450\",\r\n    \"amount\":5000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/sendmoney",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "payment to merchant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if have enough money payment successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"successful\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01700737450\",\r\n    \"to_account\":\"01686606905\",\r\n    \"amount\":100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/payment",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "payment to merchant not having enough money",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if not having enough balance payment insuccessful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Insufficient balance\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01700737450\",\r\n    \"to_account\":\"01686606905\",\r\n    \"amount\":10000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/transaction/payment",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"payment"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Check balance",
			"item": [
				{
					"name": "Check agent balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if agent account is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"balance\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}//transaction/balance/01706360497",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"",
								"transaction",
								"balance",
								"01706360497"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check customer balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}//transaction/balance/01799999997",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"",
								"transaction",
								"balance",
								"01799999997"
							]
						}
					},
					"response": []
				},
				{
					"name": "check statement by customer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/transaction/statement/01700737450",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"statement",
								"01700737450"
							]
						}
					},
					"response": []
				},
				{
					"name": "check balance by customer",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/transaction/balance/01700737450",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"balance",
								"01700737450"
							]
						}
					},
					"response": []
				},
				{
					"name": "check by merchant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/transaction/balance/01686606905",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"transaction",
								"balance",
								"01686606905"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjkyOTY1NjAzLCJleHAiOjE2OTI5Njc0MDN9.U4pJENcxhow-DQQi71Ppzv1S7G4sUlGd_zKqAU82-oI"
		},
		{
			"key": "baseURL",
			"value": "http://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "partnerkey",
			"value": "ROADTOSDET",
			"type": "string"
		},
		{
			"key": "phoneNumber",
			"value": "01700787699"
		},
		{
			"key": "amount",
			"value": 2481
		}
	]
}